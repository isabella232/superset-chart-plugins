import { TimeRangeEndpoints } from '@superset-ui/core';
import { LegendOrientation, LegendType } from '../../lib/types';
import { EchartsScatterFormData } from '../../src/Scatter/types';

export const expectedAggregatedQuery = {
  time_range: 'No filter',
  granularity: 'ds',
  filters: [],
  extras: {
    time_range_endpoints: ['inclusive', 'exclusive'],
    having: '',
    having_druid: [],
    where: '',
  },
  applied_time_extras: {},
  columns: ['AIRLINE', 'FLIGHT_NUMBER'],
  metrics: [
    {
      expressionType: 'SIMPLE',
      column: {
        column_name: 'DISTANCE',
        description: null,
        expression: '',
        filterable: true,
        groupby: true,
        id: 398,
        is_dttm: false,
        python_date_format: null,
        type: 'BIGINT',
        type_generic: 0,
        verbose_name: null,
      },
      aggregate: 'SUM',
      sqlExpression: null,
      isNew: false,
      hasCustomLabel: true,
      label: 'MY_Distance',
      optionName: 'metric_esscid3u5jc_985nqw1i2ul',
    },
    {
      aggregate: 'SUM',
      column: {
        column_name: 'DEPARTURE_DELAY',
        description: null,
        expression: '',
        filterable: true,
        groupby: true,
        id: 392,
        is_dttm: false,
        python_date_format: null,
        type: 'DOUBLE PRECISION',
        type_generic: 0,
        verbose_name: null,
      },
      expressionType: 'SIMPLE',
      hasCustomLabel: false,
      isNew: false,
      label: 'SUM(DEPARTURE_DELAY)',
      optionName: 'metric_j33ov1hvmp_uwnvdyyo4l',
      sqlExpression: null,
    },
    {
      expressionType: 'SIMPLE',
      column: {
        id: 386,
        column_name: 'FLIGHT_NUMBER',
        verbose_name: null,
        description: null,
        expression: '',
        filterable: true,
        groupby: true,
        is_dttm: false,
        type: 'BIGINT',
        type_generic: 0,
        python_date_format: null,
      },
      aggregate: 'COUNT',
      sqlExpression: null,
      isNew: false,
      hasCustomLabel: false,
      label: 'COUNT(FLIGHT_NUMBER)',
      optionName: 'metric_pibu1gtxijm_2i9hiyupdu7',
    },
  ],
  annotation_layers: [],
  row_limit: 50,
  timeseries_limit: 0,
  order_desc: true,
  url_params: {},
  custom_params: {},
  custom_form_data: {},
};

export const aggregatedformData = {
  viz_type: 'scatter',
  datasource: '10__table',
  slice_id: 384,
  url_params: {},
  time_range_endpoints: ['inclusive', 'exclusive'] as TimeRangeEndpoints,
  granularity_sqla: 'ds',
  time_range: 'No filter',
  query_mode: 'aggregate',
  x_raw: 'DISTANCE',
  x: {
    expressionType: 'SIMPLE',
    column: {
      column_name: 'DISTANCE',
      description: null,
      expression: '',
      filterable: true,
      groupby: true,
      id: 398,
      is_dttm: false,
      python_date_format: null,
      type: 'BIGINT',
      type_generic: 0,
      verbose_name: null,
    },
    aggregate: 'SUM',
    sqlExpression: null,
    isNew: false,
    hasCustomLabel: true,
    label: 'MY_Distance',
    optionName: 'metric_esscid3u5jc_985nqw1i2ul',
  },
  y_raw: 'DEPARTURE_DELAY',
  y: {
    aggregate: 'SUM',
    column: {
      column_name: 'DEPARTURE_DELAY',
      description: null,
      expression: '',
      filterable: true,
      groupby: true,
      id: 392,
      is_dttm: false,
      python_date_format: null,
      type: 'DOUBLE PRECISION',
      type_generic: 0,
      verbose_name: null,
    },
    expressionType: 'SIMPLE',
    hasCustomLabel: false,
    isNew: false,
    label: 'SUM(DEPARTURE_DELAY)',
    optionName: 'metric_j33ov1hvmp_uwnvdyyo4l',
    sqlExpression: null,
  },
  groupby: ['AIRLINE', 'FLIGHT_NUMBER'],
  row_limit: 50,
  adhoc_filters: [],
  use_metric_for_bubble_size: false,
  bubble_size: '5',
  size: {
    expressionType: 'SIMPLE',
    column: {
      id: 386,
      column_name: 'FLIGHT_NUMBER',
      verbose_name: null,
      description: null,
      expression: '',
      filterable: true,
      groupby: true,
      is_dttm: false,
      type: 'BIGINT',
      type_generic: 0,
      python_date_format: null,
    },
    aggregate: 'COUNT',
    sqlExpression: null,
    isNew: false,
    hasCustomLabel: false,
    label: 'COUNT(FLIGHT_NUMBER)',
    optionName: 'metric_pibu1gtxijm_2i9hiyupdu7',
  },
  size_raw: 'AIR_TIME',
  min_bubble_size: '10',
  max_bubble_size: '50',
  show_regression: false,
  show_regression_label: true,
  regression: 'linear',
  regressionOrder: '3',
  color_scheme: 'supersetColors',
  show_legend: true,
  legendType: 'scroll' as LegendType,
  legendOrientation: 'top' as LegendOrientation,
  x_axis_format: 'SMART_NUMBER',
  y_axis_format: 'SMART_NUMBER',
  show_labels: false,
  show_highlighting: false,
  extra_form_data: {},
} as unknown as EchartsScatterFormData;

export const rawFormData = {
  viz_type: 'scatter',
  datasource: '10__table',
  slice_id: 384,
  url_params: {},
  time_range_endpoints: ['inclusive', 'exclusive'] as TimeRangeEndpoints,
  granularity_sqla: 'ds',
  time_range: 'No filter',
  query_mode: 'raw',
  x_raw: 'DISTANCE',
  x: null,
  y_raw: 'DEPARTURE_DELAY',
  y: null,
  groupby: [],
  row_limit: 50,
  adhoc_filters: [],
  use_metric_for_bubble_size: false,
  bubble_size: '5',
  size: null,
  size_raw: 'AIR_TIME',
  min_bubble_size: '10',
  max_bubble_size: '50',
  show_regression: false,
  show_regression_label: true,
  regression: 'linear',
  regressionOrder: '3',
  color_scheme: 'supersetColors',
  show_legend: true,
  legendType: 'scroll' as LegendType,
  legendOrientation: 'top' as LegendOrientation,
  x_axis_format: 'SMART_NUMBER',
  y_axis_format: 'SMART_NUMBER',
  show_labels: false,
  show_highlighting: false,
  extra_form_data: {},
} as unknown as EchartsScatterFormData;

export const expectedRawQuery = {
  time_range: 'No filter',
  granularity: 'ds',
  filters: [],
  extras: {
    time_range_endpoints: ['inclusive', 'exclusive'],
    having: '',
    having_druid: [],
    where: '',
  },
  applied_time_extras: {},
  columns: ['DISTANCE', 'DEPARTURE_DELAY', 'AIR_TIME'],
  annotation_layers: [],
  row_limit: 50,
  timeseries_limit: 0,
  order_desc: true,
  url_params: {},
  custom_params: {},
  custom_form_data: {},
};
